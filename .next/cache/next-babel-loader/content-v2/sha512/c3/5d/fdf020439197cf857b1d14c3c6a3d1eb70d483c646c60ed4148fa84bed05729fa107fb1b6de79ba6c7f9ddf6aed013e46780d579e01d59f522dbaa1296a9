{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport PokemonContainer from \"../../containers/PokemonContainer/PokemonContainer\";\nimport styled from \"@emotion/styled\";\nimport { useRouter } from \"next/router\";\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport useLocalStorage from \"../../utils/useLocalStorage\";\nimport { toast } from \"react-toastify\";\nimport Button from \"../../components/Button/Button\";\nimport { BACKGROUND, BOX } from \"components/colors\";\nconst Box = styled.div`\n  margin: 8px 4px;\n  padding: 16px;\n  border: 1px solid ${BOX.COLOR.border};\n  .wrapper {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n`;\nconst ModalStyleSuccess = {\n  modal: {\n    background: BACKGROUND.COLOR.success\n  }\n};\nconst ModalStyleDanger = {\n  modal: {\n    background: BACKGROUND.COLOR.danger\n  }\n};\nconst AlertMessage = styled.p`\n  background-color: ${BACKGROUND.COLOR.danger};\n  color: white;\n  margin-top: 8px;\n  padding: 8px;\n`;\n\nconst Detail = () => {\n  var _pokemonDetail$sprite, _pokemonDetail$sprite2;\n\n  const router = useRouter();\n  const [ownedPokemon, setOwnedPokemon] = useLocalStorage(\"ownedPokemon\", \"\");\n  const {\n    0: pokemonName,\n    1: setPokemonName\n  } = useState(\"\");\n  const {\n    0: openSuccessModal,\n    1: setOpenSuccessModal\n  } = useState(false);\n  const {\n    0: openFailModal,\n    1: setOpenFailModal\n  } = useState(false);\n  const {\n    0: alertMessage,\n    1: setAlertMessage\n  } = useState(\"\");\n  const pokemonContainer = PokemonContainer.useContainer();\n  const {\n    fetchPokemonDetail,\n    pokemonDetail,\n    fetchingPokemonDetail\n  } = pokemonContainer;\n  useEffect(() => {\n    fetchPokemonDetail(String(router.query.pokemonName));\n  }, []);\n\n  const handleCatchButtonClick = () => {\n    /**\n     *\n     * @param probabilityChance {number}, it is a number between 0 - 10 with 10 as 100%\n     */\n    const probability = ((probabilityChance = 0.5) => {\n      return !!probabilityChance && Math.random() <= probabilityChance;\n    })();\n\n    if (probability) {\n      setOpenSuccessModal(true);\n    } else {\n      setOpenFailModal(true);\n    }\n  };\n\n  const renderModal = () => {\n    const savePokemon = () => {\n      const isNickNameExist = () => {\n        return ownedPokemon.some(item => item.nickName === pokemonName);\n      };\n\n      if (ownedPokemon.length > 0 && isNickNameExist()) {\n        setAlertMessage(\"Duh lupa ya? kan yang namanya itu udah ada, coba nickname lain gih\");\n        return;\n      }\n\n      const catchedPokemon = {\n        name: pokemonDetail.name,\n        nickName: pokemonName,\n        image: pokemonDetail.sprites.front_default\n      };\n      setOwnedPokemon(prevState => {\n        if (prevState) {\n          return [...prevState, catchedPokemon];\n        }\n\n        return [catchedPokemon];\n      });\n      toast.success(\"Wah berhasil berhasil, cek profil anda gan!\", {\n        position: \"top-center\",\n        autoClose: 4000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      setPokemonName(\"\");\n      setOpenSuccessModal(false);\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Modal, {\n      styles: ModalStyleSuccess,\n      open: openSuccessModal,\n      onClose: () => {\n        setPokemonName(\"\");\n        setOpenSuccessModal(false);\n      }\n    }, __jsx(\"h2\", null, \"Demi Apa??\"), __jsx(\"h3\", null, \"Kamu Berhasil Menangkapnya\"), __jsx(\"h4\", null, \"Beri pokemon mu nama tuan, biar semakin wantap wantap\"), __jsx(\"div\", null, __jsx(\"input\", {\n      type: \"text\",\n      value: pokemonName,\n      placeholder: \"Nama Pokemon mu tuan\",\n      onChange: event => {\n        setAlertMessage(\"\");\n        setPokemonName(event.target.value);\n      }\n    }), __jsx(\"button\", {\n      onClick: savePokemon\n    }, \"Simpan\")), alertMessage && __jsx(AlertMessage, null, alertMessage)), __jsx(Modal, {\n      styles: ModalStyleDanger,\n      open: openFailModal,\n      onClose: () => setOpenFailModal(false)\n    }, __jsx(\"h2\", null, \"Gagal\"), __jsx(\"h3\", null, \"Sayang sekali coba lagi sampai sayang,\"), __jsx(\"h3\", null, \"Eh sampai dapat maksudnya\")));\n  };\n\n  return __jsx(Box, null, renderModal(), !fetchingPokemonDetail && pokemonDetail && __jsx(\"div\", {\n    className: \"wrapper\"\n  }, __jsx(\"div\", null, __jsx(\"img\", {\n    src: pokemonDetail === null || pokemonDetail === void 0 ? void 0 : (_pokemonDetail$sprite = pokemonDetail.sprites) === null || _pokemonDetail$sprite === void 0 ? void 0 : _pokemonDetail$sprite.front_default,\n    alt: pokemonDetail === null || pokemonDetail === void 0 ? void 0 : (_pokemonDetail$sprite2 = pokemonDetail.sprites) === null || _pokemonDetail$sprite2 === void 0 ? void 0 : _pokemonDetail$sprite2.front_default,\n    height: 96,\n    width: 96\n  })), __jsx(\"div\", null, __jsx(\"div\", null, __jsx(\"h2\", null, \"Name\"), __jsx(\"p\", null, pokemonDetail.name)), __jsx(\"div\", null, __jsx(Button, {\n    onClick: handleCatchButtonClick\n  }, \"Catch\")), __jsx(\"div\", null, __jsx(\"h2\", null, \"Types\"), pokemonDetail.types.map(type => {\n    return __jsx(\"p\", null, type.type.name);\n  })), __jsx(\"div\", null, __jsx(\"h2\", null, \"Moves\"), pokemonDetail.moves.map(move => {\n    return __jsx(\"p\", null, move.move.name);\n  }))), __jsx(\"div\", null)), fetchingPokemonDetail && \"Loading . . .\");\n};\n\nexport default Detail;","map":null,"metadata":{},"sourceType":"module"}